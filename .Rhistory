# Daten laden
dat1 <- dat.raudenbush1985
dat1$setting <- as.factor(dat1$setting)
dat1$tester <- as.factor(dat1$tester)
dat1$setting <- as.factor(dat1$setting)
dat1$tester <- as.factor(dat1$tester)
### meta-analysis using a fixed-effects model
resf <- rma.uni(yi, vi, method= "FE", data=dat1)
resf
### random-effects model
resr <- rma.uni(yi, vi, data=dat1)
resr
### random-effects model
resr <- rma.uni(yi, vi, data=dat1)
resr
# Daten laden
dat1 <- dat.raudenbush1985
# install.packages("metafor")
library(metafor)
# Daten laden
dat1 <- dat.raudenbush1985
dat1$setting <- as.factor(dat1$setting)
dat1$tester <- as.factor(dat1$tester)
### meta-analysis using a fixed-effects model
resf <- rma.uni(yi, vi, method= "FE", data=dat1)
resf
### random-effects model
resr <- rma.uni(yi, vi, data=dat1)
resr
### Zeichne forest plot fuer fixed effect model
forest(resf, main = "Pygmalion effect - fixed effect model", slab = dat1$author, showweights = TRUE, header=TRUE)
# Mit mehr Optionen
forest(resf, main = "Pygmalion effect - fixed effect model", xlim=c(-12,10), ilab=cbind(dat1$setting, dat1$tester), ilab.xpos=c(-6,-4), slab = dat1$author, showweights = FALSE, header=TRUE)
### Zeichne forest plot fuer random effects model
forest(resr, slab = dat1$author, header="Study/Source", cex = 0.8, showweights = TRUE)
####### with moderators
random_mods1 <- rma(yi, vi, mods = ~ weeks + setting + tester, data=dat1, method = "ML")
random_mods1
random_mods1b <- rma(yi, vi, mods = ~ setting + tester, data=dat1, method ="ML")
random_mods1b
random_mods1c <- rma(yi, vi, mods = ~ weeks, data=dat1, method ="ML")
random_mods1c
anova.rma(random_mods1, random_mods1b)
anova.rma(random_mods1, random_mods1c)
#### Vorhersage mittlere Effektstaerken
predict.rma(random_mods1, newmods = cbind(weeks = c(0,2,4,6), setting = 0, tester = 1), addx = TRUE)
predict.rma(random_mods1, newmods = cbind(weeks = c(0,0,0,0,10,10,10,10), setting = c(0,0,1,1,0,0,1,1), tester = c(0,1,0,1,0,1,0,1)), addx = TRUE)
dat1$weeks.dich <- ifelse(dat1$weeks >= 3, 1, 0)
hist(dat1$weeks.dich)
dat1$weeks.text <- ifelse(dat1$weeks >= 3, "3 or more", "2 or less")
### Berechnung Modell
random_mods2 <- rma(yi, vi, mods = ~ weeks.dich, data=dat1)
random_mods2
### Vorhersage EffektstÃ¤rken
predict.rma(random_mods2, newmods = c(0,1), addx = TRUE)
########## Multikollinearity
vif(random_mods1)
######### Residuals
plot(residuals.rma(random_mods1, type = "rstudent") ~ dat1$study)
abline(h=0)
######### Influence
checkInfluence <- influence(random_mods1)
checkInfluence
plot(checkInfluence)
#### Standard funnel plot fuer random effects model
f1 <- funnel(resr, main ="Funnel plot random effects model", ylab = "sei", xlab ="effect size")
f1
#### Contour enhanced funnel plot
funnel(resr, level=c(95, 99), shade=c("white", "gray75"), refline=0, cex = 0.8, legend=TRUE)
####### Egger's regression test for funnel plot asymmetry
regtest(resr)
####### trim and fill
random_tf <- trimfill(resr, estimator = "R0")
random_tf
forest(random_tf, slab = c(dat1$author, "Fill1", "Fill2"), main = "Forest plot with trim and fill", header = TRUE, cex = 1)
funnel(random_tf, main = "Funnel plot with trim and fill")
regtest(random_tf)
####### with moderators
random_mods1 <- rma(yi, vi, mods = ~ weeks + setting + tester, data=dat1, method = "ML")
random_mods1
random_mods1b <- rma(yi, vi, mods = ~ setting + tester, data=dat1, method ="ML")
random_mods1b
random_mods1c <- rma(yi, vi, mods = ~ weeks, data=dat1, method ="ML")
random_mods1c
anova.rma(random_mods1, random_mods1b)
anova.rma(random_mods1, random_mods1c)
4+5
getwd()
getwd()
setwd("C:/Users/bente/Documents/Studium/BachelorPsychologie/Projekte/KlinMethGoettingen")
dat = read.csv("motivation_precourse.csv")
dat[1]
dat[3]
dat$mot_post
dat[3][1]
dat[3]
dat[3]$mot_post
dat$mot_post
head(dat$mot_post)
dat[4, 1]
dat[1, 4]
dat[, 3]
head(dat[, 3])
head(dat$mot_post)
attr(dat$mot_post)
attr(dat$mot_post, "test")
attr(dat$mot_post, "test", "HAHAHA")
attr(dat$mot_post, "Test") = "HAHAA"
attr(dat$mot_post, "Test")
attr(dat$mot_post, "Test") = NULL
2 ^ 3 == 8
1:4 ^ 3 == 8
1:4 .^ 3 == 8
1:4 ^ 3 == 8
2 ^ 1:4 == 8
2 ^ (1:4) == 8
dat == "Ohne"
dat$precourse == "Ohne"
head(dat == "Ohne")
head(dat$precourse == "Ohne")
sum(dat$precourse == "Ohne"))
sum(dat$precourse == "Ohne")
dat_ohne = dat[dat$precourse == "Ohne", ]
dat_ohne[dat_ohne$precourse != "Ohne"]
dat_ohne[dat_ohne$precourse != "Ohne", ]
dat_first_100 = subset(dat, subject_nr <= 100)
dat_first_100 = subset(dat, dat$subject_nr <= 100)
?subset
dat_first_100 = subset(dat, dat$subject_nr <= 100)
dat_first_100 = subset(dat, dat$subjectNr <= 100)
dat_no_pre = subset(dat, select=c(1, 3, 4))
dat_no_pre = subset(dat, select=c("mot_post"))
dat_no_pre = subset(dat, select=c("precourse", "mot_post", "subjectNr"))
setwd("Vorkurs")
setwd("../")
read.csv("motivation_precourse.csv")
read.csv("Vorkurs/motivation_precourse.csv")
