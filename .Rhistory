# Scatterplot machen für Verteilung in den 6 Bedingungen
scatterplot(res.vec ~ fit.vec)
# Scatterplot für Residuen unter Berücksichtigung des random intercept
plot(M1)
# Mit Helmertkontrasten für Faktor Zeitpunkt
###############################################
dat_1_long_b$Zeitpunkt = factor(dat_1_long_b$Zeitpunkt, levels=c("Follow_up", "Post", "Pre"))
contrasts(dat_1_long_b$Zeitpunkt) <- contr.helmert(3)
contrasts(dat_1_long_b$Zeitpunkt)
# Modelldefinition
M1_helm <- lme(BDI ~ Gruppe * Zeitpunkt, random = ~1|ID, data = dat_1_long_b)
summary(M1_helm)
Anova(M1_helm)
# Residuen
densityplot(residuals(M1_helm, type = "normalized"))
## Normalisierung ist wichtig, damit Abhängigkeiten richtig berücksichtigt werden
# Abspeichern der Residuen und fitted values in Vektoren
res.vec2 <- residuals(M1_helm, type = "normalized")
fit.vec2 <- M1_helm$fitted[,1]
# Scatterplot machen für Verteilung in den 6 Bedingungen
scatterplot(res.vec2 ~ fit.vec2)
# Scatterplot für Residuen unter Berücksichtigung des random intercept
plot(M1_helm)
dat_Warteliste <- subset(dat_1_long_b, Gruppe == "Warteliste")
dat_KVT <- subset(dat_1_long_b, Gruppe == "KVT")
## Warteliste
dat_Warteliste$Zeitpunkt <- factor(dat_Warteliste$Zeitpunkt, levels = c("Pre", "Post", "Follow_up"))
contrasts(dat_Warteliste$Zeitpunkt) <- contr.poly(3)
M2 <- lme(BDI ~ Zeitpunkt, random = ~1|ID, data = dat_Warteliste)
summary(M2)
## KVT
contrasts(dat_KVT$Zeitpunkt) <- contr.helmert(3)
contrasts(dat_KVT$Zeitpunkt)
M3 <- lme(BDI ~ Zeitpunkt, random = ~1|ID, data = dat_KVT)
summary(M3)
#| warning: false
library(ggplot2)
library(psych)
library(Hmisc)
library(car)
library(lmtest)
library(effectsize)
library(rcompanion)
library(tidyr)
library(predictmeans)
library(nlme)
library(ez)
#setwd("Sitzungen")
dat_1 <- read.csv(file = "BDI_1_ALM.csv", header = TRUE, sep = ",", dec = ".", na.strings = "NA")
setwd("Sitzungen")
#setwd("Sitzungen")
dat_1 <- read.csv(file = "BDI_1_ALM.csv", header = TRUE, sep = ",", dec = ".", na.strings = "NA")
# Characterstrings als Faktoren definieren
dat_1$Gruppe <- as.factor(dat_1$Gruppe)
dat_1$Gruppe <- factor(dat_1$Gruppe, levels = c("Warteliste", "KVT"))
dat_1_long <- as.data.frame(pivot_longer(dat_1, cols = c(Pre, Post, Follow_up), names_to = "Zeitpunkt",
values_to = "BDI", values_drop_na = FALSE))
dat_1_long$Zeitpunkt <- as.factor(dat_1_long$Zeitpunkt)
dat_1_long$Zeitpunkt <- factor(dat_1_long$Zeitpunkt, levels = c("Pre", "Post", "Follow_up"))
dat_1_long$ID <- as.factor(dat_1_long$ID)
# BDI als Kriterium/outcome
print(ggplot(dat_1_long, aes(x=Zeitpunkt, y=BDI)) +
geom_violin() +
geom_jitter(width = 0.3, height = 0, col = "grey", size = 0.5) +
facet_wrap(~Gruppe)+
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Behandlung und Zeitpunkt N=200"))
print(ggplot(dat_1_long, aes(x=Zeitpunkt, y=BDI, group = ID)) +
facet_wrap(~Gruppe)+
geom_line(aes(color= ID), show.legend = FALSE) +
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Behandlung und Zeitpunkt"))
## Wegen nicht möglicher Werte im BDI Daten bereinigen
dat_1_long_b <- subset(dat_1_long, BDI >= 0)
nrow(dat_1_long_b)
## Abbildungen ohne die nicht möglichen Werte
print(ggplot(dat_1_long_b, aes(x=Zeitpunkt, y=BDI)) +
geom_violin() +
geom_jitter(width = 0.3, height = 0, col = "grey", size = 0.5) +
facet_wrap(~Gruppe)+
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Behandlung und Zeitpunkt N=200"))
print(ggplot(dat_1_long_b, aes(x=Zeitpunkt, y=BDI, group = ID)) +
facet_wrap(~Gruppe)+
geom_line(aes(color= ID), show.legend = FALSE) +
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Behandlung und Zeitpunkt"))
setwd("Sitzungen")
#| warning: false
library(car)
library(readr)
library(lmtest)
library(rcompanion)
library(questionr)
library(glmm)
library(ggplot2)
library(psych)
library(Hmisc)
library(tidyr)
library(tables)
#setwd("Sitzungen")
dat_log1 <- read.csv(file = "BDI_2_LR.csv", header = TRUE, sep = ",", dec = ".")
dat_log1$ID <- as.factor(dat_log1$ID)
dat_log1$Therapie <- as.factor(dat_log1$Therapie)
# Daten ins long format nur wegen der Abbildung
dat_log1_long <- as.data.frame(pivot_longer(dat_log1, cols = c(Pre, Post), names_to = "Zeitpunkt",
values_to = "BDI", values_drop_na = FALSE))
dat_log1_long$Zeitpunkt <- as.factor(dat_log1_long$Zeitpunkt)
dat_log1_long$Zeitpunkt <- factor(dat_log1_long$Zeitpunkt, levels = c("Pre", "Post"))
dat_log1_long$ID <- as.factor(dat_log1_long$ID)
ggplot(dat_log1_long, aes(x=Zeitpunkt, y=BDI, group = ID)) +
facet_wrap(~Therapie)+
geom_line(aes(color= ID), show.legend = FALSE) +
geom_hline(yintercept=19.5, color = "red") +
annotate("text", x = 0.6, y = 19.5, label = "Depression", vjust = -0.5, color = "red", size =2) +
geom_hline(yintercept=12.5, color = "darkgreen") +
annotate("text", x = 0.6, y = 12.5, label = "Normal", vjust = -0.5, color = "darkgreen", size =2) +
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Therapieform und Zeitpunkt")
# Kriterium Clinically Significant Change CSC
Log.Model1 <- glm(dat_log1$CSC ~ dat_log1$Therapie, family = binomial(), data = dat_log1)
# Reduktion der Symptomatik
## Berechnung 50% Symptomatik des Prä-Werts
dat_log1$Half_Pre <- dat_log1$Pre*0.5
## Bestimmung, ob Kriterium erreicht ist
dat_log1$Krit_Half <- ifelse(dat_log1$Post <= dat_log1$Half_Pre, 1, 0)
dat_log1$Krit_Half <- as.factor(dat_log1$Krit_Half)
dat_log1$Krit_Half <- factor(dat_log1$Krit_Half, labels = c("No_50%_Red", "50%_Reduction"))
## Tabelle zur Veranschaulichung
table_krit_half <- tabulr(Therapie ~ Krit_Half, data = dat_log1)
table_krit_half
# Absinken in den Normalbereich
dat_log1$Sink_Norm = ifelse(dat_log1$Pre >= 13 & dat_log1$Post < 13, 1, 0)
dat_log1$Sink_Norm <- as.factor(dat_log1$Sink_Norm)
dat_log1$Sink_Norm <- factor(dat_log1$Sink_Norm, labels = c("No_Sink", "Sink"))
table_sink <- tabulr(Therapie ~ Sink_Norm, data = dat_log1)
table_sink
# Reliable Change Index
dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (sd(dat_log1$Pre) * sqrt(2*(1-0.8)))
dat_log1$Signif_RCI = ifelse(dat_log1$RCI < -1.96, 1, 0)
dat_log1$Signif_RCI <- as.factor(dat_log1$Signif_RCI)
dat_log1$Signif_RCI <- factor(dat_log1$Signif_RCI, labels = c("No_RCI", "RCI"))
table_RCI <- tabulr(Therapie ~ Signif_RCI, data = dat_log1)
table_RCI
# Clinically significant change vs. no clinically significant change
dat_log1$CSC = ifelse(dat_log1$Sink_Norm == "Sink" & dat_log1$Signif_RCI == "RCI", 1, 0)
dat_log1$CSC = as.factor(dat_log1$CSC)
dat_log1$CSC <- factor(dat_log1$CSC, labels = c("No_CSC", "CSC"))
table_CSC <- tabulr(Therapie ~ CSC, data = dat_log1)
table_CSC
# Graphik für Clinically significant change
g = ggplot(dat_log1) +
geom_mosaic(aes(x=product(CSC, Therapie), fill=CSC), divider=c("vspine", "hspine"))
library(car)
library(readr)
library(lmtest)
library(rcompanion)
library(questionr)
library(glmm)
library(ggplot2)
library(ggmosaic)
library(psych)
library(Hmisc)
library(tidyr)
library(tables)
library(MASS)
# Reduktion der Symptomatik
## Berechnung 50% Symptomatik des Prä-Werts
dat_log1$Half_Pre <- dat_log1$Pre*0.5
## Bestimmung, ob Kriterium erreicht ist
dat_log1$Krit_Half <- ifelse(dat_log1$Post <= dat_log1$Half_Pre, 1, 0)
dat_log1$Krit_Half <- as.factor(dat_log1$Krit_Half)
dat_log1$Krit_Half <- factor(dat_log1$Krit_Half, labels = c("No_50%_Red", "50%_Reduction"))
## Tabelle zur Veranschaulichung
table_krit_half <- tabulr(Therapie ~ Krit_Half, data = dat_log1)
table_krit_half
# Absinken in den Normalbereich
dat_log1$Sink_Norm = ifelse(dat_log1$Pre >= 13 & dat_log1$Post < 13, 1, 0)
dat_log1$Sink_Norm <- as.factor(dat_log1$Sink_Norm)
dat_log1$Sink_Norm <- factor(dat_log1$Sink_Norm, labels = c("No_Sink", "Sink"))
table_sink <- tabulr(Therapie ~ Sink_Norm, data = dat_log1)
table_sink
# Reliable Change Index
dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (sd(dat_log1$Pre) * sqrt(2*(1-0.8)))
dat_log1$Signif_RCI = ifelse(dat_log1$RCI < -1.96, 1, 0)
dat_log1$Signif_RCI <- as.factor(dat_log1$Signif_RCI)
dat_log1$Signif_RCI <- factor(dat_log1$Signif_RCI, labels = c("No_RCI", "RCI"))
table_RCI <- tabulr(Therapie ~ Signif_RCI, data = dat_log1)
table_RCI
# Clinically significant change vs. no clinically significant change
dat_log1$CSC = ifelse(dat_log1$Sink_Norm == "Sink" & dat_log1$Signif_RCI == "RCI", 1, 0)
dat_log1$CSC = as.factor(dat_log1$CSC)
dat_log1$CSC <- factor(dat_log1$CSC, labels = c("No_CSC", "CSC"))
table_CSC <- tabulr(Therapie ~ CSC, data = dat_log1)
table_CSC
# Graphik für Clinically significant change
g = ggplot(dat_log1) +
geom_mosaic(aes(x=product(CSC, Therapie), fill=CSC), divider=c("vspine", "hspine"))
g = g + ggtitle("Anteil klinisch signifikanter Veränderung in den Therapiebedingungen")
g = g + geom_text(data=as.data.frame(ggplot_build(g)$data),
aes(x = (xmin + xmax) * 0.5, y = (ymin + ymax) * 0.5, label = .n / sum(.n)))
g
# Kriterium Clinically Significant Change CSC
Log.Model1 <- glm(dat_log1$CSC ~ dat_log1$Therapie, family = binomial(), data = dat_log1)
summary.glm(Log.Model1)
# Odds ratio per Hand
odds_ratios1 <- exp(Log.Model1$coefficients)
odds_ratios1
# Odds ratios mit Konfidenzintervall
odds_ratios <- odds.ratio(Log.Model1, level = 0.95)
odds_ratios
Nullmodell <- glm(dat_log1$CSC ~ 1, family = binomial(), data = dat_log1)
summary(Nullmodell)
lrtest(Nullmodell, Log.Model1)
AIC(Nullmodell)
AIC(Log.Model1)
nagelkerke(Log.Model1)
## Zentrierung der Prä-Werte
dat_log1$Pre_c <- scale(dat_log1$Pre, center = TRUE)
## Schätzung der Modelle
Log.Model2 <- glm(dat_log1$CSC ~ Therapie + Pre_c, family = binomial(), data = dat_log1)
Log.Model3 <- glm(dat_log1$CSC ~ Therapie * Pre_c, family = binomial(), data = dat_log1)
lrtest(Log.Model1, Log.Model2, Log.Model3)
## Log.Model2 ist das beste Modell
summary.glm(Log.Model2)
# Odds ratios mit Konfidenzintervall
odds_ratios <- odds.ratio(Log.Model2, level = 0.95)
odds_ratios
# Pseudo R Quadrat
nagelkerke(Log.Model2)
# Definition der vier Kategorien
# Reliable Change Index
#dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (9.5 * sqrt(2*(1-0.8)))
# 4 Kategorien
dat_log1$CSC2 = ifelse(dat_log1$RCI > 1.96, 1, ifelse(dat_log1$RCI >= -1.96 & dat_log1$RCI <= 1.96, 2, ifelse(dat_log1$RCI < -1.96 & dat_log1$Post >=13, 3, 4)))
dat_log1$CSC2 = as.factor(dat_log1$CSC2)
## Es gibt keine Verschlechterung daher nur 3 Ausprägungen
dat_log1$CSC2 <- factor(dat_log1$CSC2, labels = c("Non_Responder", "Responder", "CSC"))
table_CSC2 <- tabulr(Therapie ~ CSC2, data = dat_log1)
table_CSC2
# Ordinale Regression
Modell_ordinal <- polr(CSC2 ~ Therapie + Pre_c, method = "logistic", data = dat_log1, Hess = TRUE)
summary(Modell_ordinal)
# Berechnung p-Werte
ctable <- coef(summary(Modell_ordinal))
# p Werte mittels t Verteilung , df = N - k - 1
p <- pt(abs(ctable[,"t value"]), df = 98, lower.tail = FALSE)*2
# p Werte mittels z-Verteilung (Standardnormalverteilung)
#p2 <- pnorm(abs(ctable[,"t value"]), lower.tail = FALSE)*2
ctable <- cbind(ctable, "p value" = p)
ctable
# Berechnung Odds ratios und Konfidenzintervall
OR <- exp(coef(Modell_ordinal))
CI <- exp(confint(Modell_ordinal))
OR
CI
# Prüfung ob Annahme, dass die Odds ratios proportional sind (d.h. der Anstieg für alle Stufen gleich ist) angemessen ist
poTest(Modell_ordinal)
## der Test sollte nicht signifikant sein
## Überprüfung per Hand was beim Prädiktor Pre der Fall ist
### Vergleich Non-Responder vs. Responder + CSC
dat_log1$CSC3 = ifelse(dat_log1$RCI >= -1.96, "Non_Responder", "Responder + CSC")
dat_log1$CSC3 = as.factor(dat_log1$CSC3)
Modell_ordinal_2 <- glm(CSC3 ~ Therapie + Pre, family = binomial(), data = dat_log1)
### Vergleich Non-Responder + Responder vs. CSC
# schon berechnet ist der Factor CSC
Modell_ordinal_3 <- glm(CSC ~ Therapie + Pre, family = binomial(), data = dat_log1)
summary.glm(Modell_ordinal_2)
summary.glm(Modell_ordinal_3)
#| warning: false
library(car)
library(readr)
library(lmtest)
library(rcompanion)
library(questionr)
library(glmm)
library(ggplot2)
library(psych)
library(Hmisc)
library(tidyr)
library(tables)
#setwd("Sitzungen")
dat_log1 <- read.csv(file = "BDI_2_LR.csv", header = TRUE, sep = ",", dec = ".")
setwd("Sitzungen")
#setwd("Sitzungen")
dat_log1 <- read.csv(file = "BDI_2_LR.csv", header = TRUE, sep = ",", dec = ".")
dat_log1$ID <- as.factor(dat_log1$ID)
dat_log1$Therapie <- as.factor(dat_log1$Therapie)
# Daten ins long format nur wegen der Abbildung
dat_log1_long <- as.data.frame(pivot_longer(dat_log1, cols = c(Pre, Post), names_to = "Zeitpunkt",
values_to = "BDI", values_drop_na = FALSE))
dat_log1_long$Zeitpunkt <- as.factor(dat_log1_long$Zeitpunkt)
dat_log1_long$Zeitpunkt <- factor(dat_log1_long$Zeitpunkt, levels = c("Pre", "Post"))
dat_log1_long$ID <- as.factor(dat_log1_long$ID)
ggplot(dat_log1_long, aes(x=Zeitpunkt, y=BDI, group = ID)) +
facet_wrap(~Therapie)+
geom_line(aes(color= ID), show.legend = FALSE) +
geom_hline(yintercept=19.5, color = "red") +
annotate("text", x = 0.6, y = 19.5, label = "Depression", vjust = -0.5, color = "red", size =2) +
geom_hline(yintercept=12.5, color = "darkgreen") +
annotate("text", x = 0.6, y = 12.5, label = "Normal", vjust = -0.5, color = "darkgreen", size =2) +
ylab("Score BDI 2") +
xlab("Zeitpunkt") +
ggtitle("Depression in Abhängigkeit von Therapieform und Zeitpunkt")
# Reduktion der Symptomatik
## Berechnung 50% Symptomatik des Prä-Werts
dat_log1$Half_Pre <- dat_log1$Pre*0.5
## Bestimmung, ob Kriterium erreicht ist
dat_log1$Krit_Half <- ifelse(dat_log1$Post <= dat_log1$Half_Pre, 1, 0)
dat_log1$Krit_Half <- as.factor(dat_log1$Krit_Half)
dat_log1$Krit_Half <- factor(dat_log1$Krit_Half, labels = c("No_50%_Red", "50%_Reduction"))
## Tabelle zur Veranschaulichung
table_krit_half <- tabulr(Therapie ~ Krit_Half, data = dat_log1)
table_krit_half
# Absinken in den Normalbereich
# Reliable Change Index
# Clinically significant change
# Reduktion der Symptomatik
## Berechnung 50% Symptomatik des Prä-Werts
dat_log1$Half_Pre <- dat_log1$Pre*0.5
## Bestimmung, ob Kriterium erreicht ist
dat_log1$Krit_Half <- ifelse(dat_log1$Post <= dat_log1$Half_Pre, 1, 0)
dat_log1$Krit_Half <- as.factor(dat_log1$Krit_Half)
dat_log1$Krit_Half <- factor(dat_log1$Krit_Half, labels = c("No_50%_Red", "50%_Reduction"))
## Tabelle zur Veranschaulichung
table_krit_half <- tabulr(Therapie ~ Krit_Half, data = dat_log1)
table_krit_half
# Absinken in den Normalbereich
dat_log1$Sink_Norm = ifelse(dat_log1$Pre >= 13 & dat_log1$Post < 13, 1, 0)
dat_log1$Sink_Norm <- as.factor(dat_log1$Sink_Norm)
dat_log1$Sink_Norm <- factor(dat_log1$Sink_Norm, labels = c("No_Sink", "Sink"))
table_sink <- tabulr(Therapie ~ Sink_Norm, data = dat_log1)
table_sink
# Reliable Change Index
dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (sd(dat_log1$Pre) * sqrt(2*(1-0.8)))
dat_log1$Signif_RCI = ifelse(dat_log1$RCI < -1.96, 1, 0)
dat_log1$Signif_RCI <- as.factor(dat_log1$Signif_RCI)
dat_log1$Signif_RCI <- factor(dat_log1$Signif_RCI, labels = c("No_RCI", "RCI"))
table_RCI <- tabulr(Therapie ~ Signif_RCI, data = dat_log1)
table_RCI
# Clinically significant change vs. no clinically significant change
dat_log1$CSC = ifelse(dat_log1$Sink_Norm == "Sink" & dat_log1$Signif_RCI == "RCI", 1, 0)
dat_log1$CSC = as.factor(dat_log1$CSC)
dat_log1$CSC <- factor(dat_log1$CSC, labels = c("No_CSC", "CSC"))
table_CSC <- tabulr(Therapie ~ CSC, data = dat_log1)
table_CSC
# Graphik für Clinically significant change
g = ggplot(dat_log1) +
geom_mosaic(aes(x=product(CSC, Therapie), fill=CSC), divider=c("vspine", "hspine"))
library(car)
library(readr)
library(lmtest)
library(rcompanion)
library(questionr)
library(glmm)
library(ggplot2)
library(ggmosaic)
library(psych)
library(Hmisc)
library(tidyr)
library(tables)
library(MASS)
# Reduktion der Symptomatik
## Berechnung 50% Symptomatik des Prä-Werts
dat_log1$Half_Pre <- dat_log1$Pre*0.5
## Bestimmung, ob Kriterium erreicht ist
dat_log1$Krit_Half <- ifelse(dat_log1$Post <= dat_log1$Half_Pre, 1, 0)
dat_log1$Krit_Half <- as.factor(dat_log1$Krit_Half)
dat_log1$Krit_Half <- factor(dat_log1$Krit_Half, labels = c("No_50%_Red", "50%_Reduction"))
## Tabelle zur Veranschaulichung
table_krit_half <- tabulr(Therapie ~ Krit_Half, data = dat_log1)
table_krit_half
# Absinken in den Normalbereich
dat_log1$Sink_Norm = ifelse(dat_log1$Pre >= 13 & dat_log1$Post < 13, 1, 0)
dat_log1$Sink_Norm <- as.factor(dat_log1$Sink_Norm)
dat_log1$Sink_Norm <- factor(dat_log1$Sink_Norm, labels = c("No_Sink", "Sink"))
table_sink <- tabulr(Therapie ~ Sink_Norm, data = dat_log1)
table_sink
# Reliable Change Index
dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (sd(dat_log1$Pre) * sqrt(2*(1-0.8)))
dat_log1$Signif_RCI = ifelse(dat_log1$RCI < -1.96, 1, 0)
dat_log1$Signif_RCI <- as.factor(dat_log1$Signif_RCI)
dat_log1$Signif_RCI <- factor(dat_log1$Signif_RCI, labels = c("No_RCI", "RCI"))
table_RCI <- tabulr(Therapie ~ Signif_RCI, data = dat_log1)
table_RCI
# Clinically significant change vs. no clinically significant change
dat_log1$CSC = ifelse(dat_log1$Sink_Norm == "Sink" & dat_log1$Signif_RCI == "RCI", 1, 0)
dat_log1$CSC = as.factor(dat_log1$CSC)
dat_log1$CSC <- factor(dat_log1$CSC, labels = c("No_CSC", "CSC"))
table_CSC <- tabulr(Therapie ~ CSC, data = dat_log1)
table_CSC
# Graphik für Clinically significant change
g = ggplot(dat_log1) +
geom_mosaic(aes(x=product(CSC, Therapie), fill=CSC), divider=c("vspine", "hspine"))
g = g + ggtitle("Anteil klinisch signifikanter Veränderung in den Therapiebedingungen")
g = g + geom_text(data=as.data.frame(ggplot_build(g)$data),
aes(x = (xmin + xmax) * 0.5, y = (ymin + ymax) * 0.5, label = .n / sum(.n)))
g
# Kriterium Clinically Significant Change CSC
Log.Model1 <- glm(dat_log1$CSC ~ dat_log1$Therapie, family = binomial(), data = dat_log1)
summary.glm(Log.Model1)
# Odds ratio per Hand
odds_ratios1 <- exp(Log.Model1$coefficients)
odds_ratios1
# Odds ratios mit Konfidenzintervall
odds_ratios <- odds.ratio(Log.Model1, level = 0.95)
odds_ratios
Nullmodell <- glm(dat_log1$CSC ~ 1, family = binomial(), data = dat_log1)
summary(Nullmodell)
lrtest(Nullmodell, Log.Model1)
AIC(Nullmodell)
AIC(Log.Model1)
## Zentrierung der Prä-Werte
dat_log1$Pre_c <- scale(dat_log1$Pre, center = TRUE)
## Schätzung der Modelle
Log.Model2 <- glm(dat_log1$CSC ~ Therapie + Pre_c, family = binomial(), data = dat_log1)
Log.Model3 <- glm(dat_log1$CSC ~ Therapie * Pre_c, family = binomial(), data = dat_log1)
lrtest(Log.Model1, Log.Model2, Log.Model3)
## Log.Model2 ist das beste Modell
summary.glm(Log.Model2)
# Odds ratios mit Konfidenzintervall
odds_ratios <- odds.ratio(Log.Model2, level = 0.95)
odds_ratios
# Pseudo R Quadrat
nagelkerke(Log.Model2)
# Prüfung ob Annahme, dass die Odds ratios proportional sind (d.h. der Anstieg für alle Stufen gleich ist) angemessen ist
poTest(Modell_ordinal)
# Definition der vier Kategorien
# Reliable Change Index
#dat_log1$RCI = (dat_log1$Post - dat_log1$Pre) / (9.5 * sqrt(2*(1-0.8)))
# 4 Kategorien
dat_log1$CSC2 = ifelse(dat_log1$RCI > 1.96, 1, ifelse(dat_log1$RCI >= -1.96 & dat_log1$RCI <= 1.96, 2, ifelse(dat_log1$RCI < -1.96 & dat_log1$Post >=13, 3, 4)))
dat_log1$CSC2 = as.factor(dat_log1$CSC2)
## Es gibt keine Verschlechterung daher nur 3 Ausprägungen
dat_log1$CSC2 <- factor(dat_log1$CSC2, labels = c("Non_Responder", "Responder", "CSC"))
table_CSC2 <- tabulr(Therapie ~ CSC2, data = dat_log1)
table_CSC2
# Ordinale Regression
Modell_ordinal <- polr(CSC2 ~ Therapie + Pre_c, method = "logistic", data = dat_log1, Hess = TRUE)
summary(Modell_ordinal)
# Prüfung ob Annahme, dass die Odds ratios proportional sind (d.h. der Anstieg für alle Stufen gleich ist) angemessen ist
poTest(Modell_ordinal)
## der Test sollte nicht signifikant sein
## Überprüfung per Hand was beim Prädiktor Pre der Fall ist
### Vergleich Non-Responder vs. Responder + CSC
dat_log1$CSC3 = ifelse(dat_log1$RCI >= -1.96, "Non_Responder", "Responder + CSC")
dat_log1$CSC3 = as.factor(dat_log1$CSC3)
Modell_ordinal_2 <- glm(CSC3 ~ Therapie + Pre, family = binomial(), data = dat_log1)
### Vergleich Non-Responder + Responder vs. CSC
# schon berechnet ist der Factor CSC
Modell_ordinal_3 <- glm(CSC ~ Therapie + Pre, family = binomial(), data = dat_log1)
summary.glm(Modell_ordinal_2)
summary.glm(Modell_ordinal_3)
summary.glm(Log.Model2)
summary.glm(Modell_ordinal_3)
?glmmTMB
??glmmTMB
?pt
pt(0.5, df = df_A, lower.tail=FALSE)
pt(0.5, df = 30, lower.tail=FALSE)
pt(0.5, df = 30, lower.tail=FALSE) * 2
sum(rnorm(500) ^ 4)
sum(rnorm(500) ^ 4 / 500)
sum(rnorm(500) ^ 4 / 500)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
sum(rnorm(50000) ^ 4 / 50000)
mean(replicate(function() { sum(rnorm(50000) ^ 4 / 50000) }), 50000)
mean(replicate(function() { sum(rnorm(50000) ^ 4 / 50000) }), 50)
mean(replicate(function() { sum(rnorm(50000) ^ 4 / 50000) }, 50))
replicate(function() { sum(rnorm(50000) ^ 4 / 50000) }, 50)
?replicate
mean(replicate(50, function() { sum(rnorm(50000) ^ 4 / 50000) }))
mean(replicate(50, sum(rnorm(50000) ^ 4 / 50000)))
mean(replicate(500, sum(rnorm(50000) ^ 4 / 50000)))
mean(replicate(5000, sum(rnorm(50000) ^ 4 / 50000)))
mean(replicate(50000, sum(rnorm(50000) ^ 4 / 50000)))
sum(pnorm(seq(0, 1, 0.00001)) ^ 4)
sum(pnorm(seq(0, 1, 0.00001)) ^ 4 / length(seq(0, 1, 0.00001)))
sum(qnorm(seq(0, 1, 0.00001)) ^ 4 / length(seq(0, 1, 0.00001)))
sum(dnorm(seq(0, 1, 0.00001)) ^ 4 / length(seq(0, 1, 0.00001)))
?qnorm
sum(qnorm(seq(0, 1, 0.00001)) ^ 4 / length(seq(0, 1, 0.00001)))
sum(qnorm(seq(0, 1, 0.00001)) ^ 4)
quants = qnorm(seq(0, 1, 0.00001))
plot(1:length(quants), quants)
quants = qnorm(seq(0.00001, 0.99999, 0.00001))
sum(quants ^ 4 / length(quants))
quants = qnorm(seq(0.0000001, 0.9999999, 0.0000001))
sum(quants ^ 4 / length(quants))
quants = qnorm(seq(0.000000001, 0.999999999, 0.000000001))
quants = qnorm(seq(0.00000001, 0.99999999, 0.00000001))
sum(quants ^ 4 / length(quants))
2.9999999999999
rm(quants)
gc()
2.9999999999999999999999999999999999999999999
