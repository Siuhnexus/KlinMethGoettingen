---
title: "Meta_Raudenbush"
author: "IK & YH"
format:
  html:
    toc: true
    smooth-scroll: true
    css: ../style.css
    grid: 
      body-width: 1200px
    theme: default
editor: visual
---

## Paket metafor

Wir werden weiter das Paket metafor verwenden.

```{r}
# install.packages("metafor")
library(metafor)
```

## Datensatz

### Description

Results from 19 studies examining how teachers' expectations about their pupils can influence actual IQ levels.

### Format Daten

The data frame contains the following columns:

-   study --\> numeric study number
-   author --\> character study author(s)
-   year--\> numeric publication year
-   weeks--\> numeric weeks of contact prior to expectancy induction
-   setting--\> character whether tests were group or individually administered
-   tester--\> character whether test administrator was aware or blind
-   n1i --\> numeric sample size of experimental group
-   n2i--\> numeric sample size of control group
-   yi --\> numeric standardized mean difference
-   vi --\> numeric corresponding sampling variance

### Details zur Forschung

In the so-called 'Pygmalion study' (Rosenthal & Jacobson, 1968), "all of the predominantly poor children in the so-called Oak elementary school were administered a test pretentiously labeled the 'Harvard Test of Inflected Acquisition.' After explaining that this newly designed instrument had identified those children most likely to show dramatic intellectual growth during the coming year, the experimenters gave the names of these 'bloomers' to the teachers. In truth, the test was a traditional IQ test and the 'bloomers' were a randomly selected 20% of the student population.

After retesting the children 8 months later, the experimenters reported that those predicted to bloom had in fact gained significantly more in total IQ (nearly 4 points) and reasoning IQ (7 points) than the control group children. Further, at the end of the study, the teachers rated the experimental children as intellectually more curious, happier, better adjusted, and less in need of approval than their control group peers" (Raudenbush, 1984).

In the following years, a series of studies were conducted attempting to replicate this rather controversial finding. However, the great majority of those studies were unable to demonstrate a statistically significant difference between the two experimental groups in terms of IQ scores. Raudenbush (1984) conducted a meta-analysis based on 19 such studies to further examine the evidence for the existence of the 'Pygmalion effect'. The dataset includes the results from these studies.

The effect size measure used for the meta-analysis was the standardized mean difference (yi), with positive values indicating that the supposed 'bloomers' had, on average, higher IQ scores than those in the control group. The weeks variable indicates the number of weeks of prior contact between teachers and students before the expectancy induction. Testing was done either in a group setting or individually, which is indicated by the setting variable. Finally, the tester variable indicates whether the test administrators were either aware or blind to the researcher-provided designations of the children's intellectual potential.

The data in this dataset were obtained from Raudenbush and Bryk (1985) with information on the setting and tester variables extracted from Raudenbush (1984).

### Daten laden

Ladet jetzt den Datensatz dat.raudenbush1985.

```{r}
# Daten laden
dat = dat.raudenbush1985
```

### Daten anschauen

Wenn man einen neuen Datensatz geladen hat ist es immer sinnig einmal einen Blick drauf zu werfen und zu prüfen, ob die Variablen richtig als numerisch oder kategorial definiert sind.

### Faktoren als solche definieren

Die Faktoren setting und tester in dem Datensatz müssen noch als Faktoren definiert werden.

```{r}

```

## Metanalysen

### Fixed effects model

Mit diesem Datensatz wollen wir erst einmal ein fixed effects model rechnen. Dafür benutzen wir den Befehl rma.uni().

```{r}
### meta-analysis using a fixed-effects model

```

### Random Effects Model

```{r}
### random-effects model

```

## Forest Plot

Nun wollen wir auch noch einen forest plot zu diesen Analysen erstellen. Der Befehl hierfür ist forest() oder forest.rma().

Mehr Informationen hierzu unter: https://wviechtb.github.io/metafor/reference/forest.rma.html

```{r}
### Zeichne forest plot fuer fixed effect model



### Zeichne forest plot fuer random effects model

```

################################################# 

Der folgende Abschnitt ist ab Donnerstag relevant

## Moderatoranalyse

### Potentielle Moderatoren bei Raudenbush (1985)

```         
weeks: Dauer bis zur IQ-Testung (kontinuierlich)
setting: Testung IQ in der Gruppe oder individuell (dichotom)
tester: Verblindung des Testers (dichotom)
```

## Random effects model mit Moderatoren

Führt eine Random Effects Metaanalyse durch, in der die drei Moderatorvariablen berücksichtigt werden.

```{r}
####### Random effects model with moderators

```

### Erwartete Effektstärken

Berechnet die erwarteten Effekte für verschiedene Kombinationen der Moderatorvariablen mit Hilfe von predict.rma()

```{r}
#### Vorhersage Effektstaerken


```

## Subgruppenanalyse

Dichotomisiert die kontinuierliche Variable weeks.

```{r}

```

Berechnet ein neues Moderatormodell mit nur dieser Variable und berechnet die mittleren Effektsärken für die beiden Ausprägungen.

```{r}
### Random effects Modell mit dichotomen Moderatur weeks


#### Berechnung Effektstaerken in Subgruppen

### Berechnung mittlere Effektstärken in Subgruppen

```

### Forest plot für Subgruppenanalyse

```{r}

#### forest plot für Subgruppen
forest(resr, main ="Pygmalion-Effekt", order=dat1$weeks.dich, xlim = c(-10, 6), 
           ylim = c(-3.5, 24), rows = c(1:11, 13:20), cex = 0.7, header = TRUE, 
           ilab = dat1$weeks.text, ilab.xpos = -4, slab = paste(dat1$author, dat1$year, sep=", "))
text(-5,23, "Delay test", pos = 4, font = 2, cex = 0.75)
abline(h=0)
# Hinzufügen der mittleren Effekte in den Subgruppen
addpoly(res.short, row=-2, mlab="2 or less")
addpoly(res.long, row= -3, mlab="3 or more")
```

## Zusatz: Annahmen testen

Überprüft euer random effects model mit alle drei Moderatoren, in dem weeks ein kontinuierlicher Prädiktor ist auf\
Mulitikolliniarität (vif()), Residuen (plot(residuals.rma())) und Einfluss (influence()) und plot(influence())) schauen

Überlegt, was die Ergebnisse für die Analyse bedeuten

```{r}
########## Multikollinearity


######### Residuals


######### Influence

```

## Zusatz: Publication and small group bias

### Funnel Plots erstellen

Macht ein klassisches und ein contour enhanced funnel plot für das random effects model der Studien von Raudenbush. Nutzt dazu die Funktion funnel() (1985)

```{r}
#### Standard funnel plot


#### Contour enhanced funnel plot

```

## Test auf asymmetry

Egger´s regression Test mit Funktion regtest()

```{r}


```

## Trim & Fill

```{r}
# trim and fill mit trimfill.rma.uni(MODELLNAME, estimator = "R0")

```

### Forest plot und ein Funnel plot für die ergänzten Daten

```{r}

```

### Egger´s Test ob jetzt Symmetrie vorliegt

```{r}

```
