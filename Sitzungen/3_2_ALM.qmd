---
title: "Datenanalyse ALM (3) Kontraste"
author: "YH"
date: '2022-05-16'
output:
  word_document: default
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "")
```

### Activate packages
```{r}
library(ggplot2)
library(psych)
library(Hmisc)
library(car)
library(lmtest)
library(effectsize)
library(rcompanion)
library(tidyr)
library(predictmeans)
```
### set working directory

```{r}
setwd("~/Teaching/Master/Methoden_Klippt/Methoden Klippt 2022/Datenbeispiele/3_1_2")
```

### Daten einlesen

Auch hier bitte darauf achten, dass das Verzeichnis für die Datei stimmt.
```{r}
dat_1 <- read.csv(file = "~/Teaching/Master/Methoden_Klippt/Methoden Klippt 2022/Datenbeispiele/3_1_2/Dat_VR_Anxiety_lm4.csv", header = TRUE, sep = ",", dec = ".", na.strings = "NA")

# Characterstrings als Faktoren definieren
dat_1$Gruppe <- as.factor(dat_1$Gruppe) 
dat_1$Gruppe <- factor(dat_1$Gruppe, levels = c("Warteliste", "in_sensu", "in_virtuo")) 

# Change berechnen

dat_1$Change <- dat_1$Post - dat_1$Pre

```

## Visuelle Analyse

```{r}
# Post als Kriterium/outcome

## Prä-Messung
ggplot(dat_1, aes(Gruppe, Pre)) + 
  geom_violin() + 
  geom_jitter(width = 0.3, height = 0, col = "grey", size = 0.5) +
  stat_summary(fun = mean, geom = "point", size = 2, col = "red")  +
  stat_summary(geom="errorbar", fun.data=mean_cl_normal, width=.1, col ="red")+
  ylim(0,40) +
  ylab("Score Anxiety") + 
  xlab("Treatment") +
  ggtitle("Belastung vor Behandlung")

## Post-Messung
ggplot(dat_1, aes(Gruppe, Post)) + 
  geom_violin() + 
  geom_jitter(width = 0.3, height = 0, col = "grey", size = 0.5) +
  stat_summary(fun = mean, geom = "point", size = 2, col = "red")  +
  stat_summary(geom="errorbar", fun.data=mean_cl_normal, width=.1, col ="red")+
  ylim(0,40) +
  ylab("Score Anxiety") + 
  xlab("Treatment") +
  ggtitle("Belastung nach Behandlung")

## Zusammenhang Pre-Werte und Post-Werte
ggplot(dat_1, aes(Pre, Post)) + 
  geom_point() + 
  geom_smooth(method = "lm") +
  facet_wrap(~Gruppe)+
  ylab("Post-Werte") + 
  xlab("Prä-Werte")+
  ggtitle("Zusammenhang Prä und Post pro Gruppe")

# Veränderung prä zu post als Kriterium

## Veraenderung
ggplot(dat_1, aes(Gruppe, Change)) + 
  geom_violin() + 
  geom_jitter(width = 0.3, height = 0, col = "grey", size = 0.5) +
  stat_summary(fun = mean, geom = "point", size = 2, col = "red")  +
  stat_summary(geom="errorbar", fun.data=mean_cl_normal, width=.1, col ="red")+
  ylim(-30,+10) +
  ylab("Absolute Change Score Anxiety") + 
  xlab("Treatment") +
  ggtitle("Veränderung Belastung Prä zu Post")

## Zusammenhang Pre-Werte und Veränderung
ggplot(dat_1, aes(Pre, Change)) + 
  geom_point() + 
  geom_smooth(method = "lm") +
  facet_wrap(~Gruppe)+
  ylab("Post-Werte") + 
  xlab("Prä-Werte")+
  ggtitle("Zusammenhang Prä und Change pro Gruppe")
```

# Zu Grunde gelegtes statistisches Modell

Score Pre-Treatment und Behandlung sagen Change im Score vorher

## Analyse Schritt 1: Allgemeines lineares Modell anpassen

```{r}
# Zentrierung des kontinuierlichen Praediktors Pre-Wert
dat_1$Pre_c <- as.vector(scale(dat_1$Pre, center = TRUE, scale = FALSE)) # dient der besseren Interpretierbarkeit

# Modelldefinition
M1 <- lm(Change ~ Pre_c + Gruppe, data = dat_1)

# Schaetzung der Parameter
summary(M1)

# Deskriptive Mittelwerte
describeBy(dat_1$Change, group = dat_1$Gruppe, data = dat_1, mat = TRUE)

# Geschätzte Mittelwerte
predmeans <- predictmeans(M1, "Gruppe", adj ="BH", barplot = TRUE)
predmeans
predmeans$predictmeansBarPlot

# Geschätzte Mittelwerte
new <- data.frame(Pre_c = rep(c(-10,0,10),3), Gruppe = c(rep("Warteliste",3),rep("in_sensu", 3), rep("in_virtuo",3)))
new$Gruppe <- as.factor(new$Gruppe)
                  
predmeans1b <- predict(M1, newdata = new, interval = "confidence")
predmeans1b.matrix <- as.data.frame(cbind(new, predmeans1b))
predmeans1b.matrix

# ANOVA zur Bestimmung der Quadratsummen für die beiden Prädiktoren
Anova(M1)
```
## Definition von Kontrasten anstelle Dummycodierung

Die beiden zu prüfenden Hypothesen waren: 
(1) CBT ist wirksam
(2) CBT mit in virtuo Exposition ist wirksamer als CBT mit in sensu Exposition

Diese beiden Kontraste können durch einen Helmert-Kontrast für 3 Ausprägungen eines Faktors erfasst werden.

```{r}
## Umsortieren so dass Warteliste die letzte Ausprägung ist, da die Helmert-Kontrast-Funktion mit der letzten Gruppe beginnt
dat_1$Gruppe <- factor(dat_1$Gruppe, levels = c("in_virtuo", "in_sensu", "Warteliste"))

# Kontrast für Behandlung definieren und schauen, ob die Kontraste richtig sind
contrasts(dat_1$Gruppe) <- contr.helmert(3)
contrasts(dat_1$Gruppe)
```
## Kontrastanalyse zur Prüfung der Hypothesen
```{r}
M2 <- lm(Change ~ Pre_c + Gruppe, data = dat_1)
summary(M2)

# Mittelwert Change overall
mean(dat_1$Change)

# Vorhergesagte Mittelwerte
pred.means2 <- predictmeans(M2, "Gruppe", adj ="BH", barplot = TRUE)
pred.means2
pred.means2$predictmeansBarPlot

# ANOVA zur Bestimmung der 
Anova(M2)
```
## Check 2: Analyse der Residuen

```{r}
## Verteilung der Residuen
plotNormalDensity(M2$residuals)

## Verteilung der Residuen in Abhängigkeit von vorhergesagten Werten
scatterplot(rstandard(M2)~fitted(M2))
scatterplot(rstandard(M2)~dat_1$ID)

## Statistischer Test auf Homoskedastizität: Breusch-Pagan Test
bptest(M2)
```


## Einflussreiche Ausreißer

Cook's distance ist ein gutes Maß zur Ermittlung zu einflussreicher Ausreißer. Die Werte der einzelnen Fälle sollte nicht größer sein als 4/(N-k-1). Die Summe sollte bei 1 liegen.

```{r}
cd <- cooks.distance(M2)
#View(cd)
plot(M2,4)
hist(cd)
```



