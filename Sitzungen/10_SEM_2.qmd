---
title: "Structural Equation Modelling (SEM)"
author: "Bente Hinkenhuis"
date: '2023-09-11'
format:
  html:
    toc: true
    smooth-scroll: true
    css: ../style.css
    grid: 
      body-width: 1200px
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r include=FALSE, echo=FALSE}
knitr::opts_knit$set(root.dir = '../')
```

# Structural Equation Modelling (SEM) - Cross-Legged Panel Models

Heute arbeiten wir mit Cross-Legged Panel Models und verstehen dabei, wie sich aus korrelativen Daten differenzieren l√§sst, welche Variable wie auf welche andere Variable im zeitlichen Verlauf wirkt. Dazu laden wir erstmal alles n√∂tige.

```{r}
library(lavaan)
source("Sitzungen/SEMgraph.R")

dat = read.csv("Sitzungen/SleepMWBScored.csv")
```

Wie beim untersuchen des Datensatzes ersichtlich wird, gibt es hier keine Indikatoren mehr, sondern nur noch die beiden latenten Variablen zu vier Zeitpunkten. Es handelt sich hier nicht mehr um gemessene Variablen, sondern um Faktor-Scores, die sich aus den Ladungen errechnen lassen. Dies dient einfach nur dazu, das Modell nicht zu komplex werden zu lassen und den Fokus dieser Sitzung auf den CLPM zu halten.

Prinzipiell gibt es bei CLPMs zwei wichtige Komponenten; die Autoregression und die Kreuzregression (unter bestimmten Umst√§nden auch Kreuzkorrelationen genannt). Jede Variable zum Zeitpunkt $t$ wirkt also auf sich selbst zu Zeitpunkt $t+1$ und auf die jeweils andere Variable zum Zeitpunkt $t+1$. Zum Verst√§ndnis gibt es weiter unten aber auch wieder eine Abbildung zum Modell.

```{r}
clpm = '
# 1. Latente Variablen
sleep1 =~ fssleep1
sleep2 =~ fssleep2
sleep3 =~ fssleep3
sleep4 =~ fssleep4
mwb1 =~ fsmwb1
mwb2 =~ fsmwb2
mwb3 =~ fsmwb3
mwb4 =~ fsmwb4

# 1. Autoregression
sleep2 ~ a1 * sleep1
sleep3 ~ a1 * sleep2
sleep4 ~ a1 * sleep3
mwb2 ~ a2 * mwb1
mwb3 ~ a2 * mwb2
mwb4 ~ a2 * mwb3

# 2. Kreuzregression
mwb2 ~ c1 * sleep1
mwb3 ~ c1 * sleep2
mwb4 ~ c1 * sleep3
sleep2 ~ c2 * mwb1
sleep3 ~ c2 * mwb2
sleep4 ~ c2 * mwb3

# 3. Kovarianzen
sleep1 ~~ cov1 * mwb1
sleep2 ~~ cov2 * mwb2
sleep3 ~~ cov2 * mwb3
sleep4 ~~ cov2 * mwb4

# 4. Intercepts
fssleep1 ~ 0 * 1
fssleep2 ~ 0 * 1
fssleep3 ~ 0 * 1
fssleep4 ~ 0 * 1
fsmwb1 ~ 0 * 1
fsmwb2 ~ 0 * 1
fsmwb3 ~ 0 * 1
fsmwb4 ~ 0 * 1
'

clpmfit = sem(clpm, dat)
summary(clpmfit, fit.measures=TRUE)
SEMgraph(clpmfit, showPar=FALSE)
```

F√ºr dieses Modell haben wir eine Syntax gebraucht, die uns noch unbekannt ist:

-   Schreiben wir einen Zahlenwert vor einen Parameter, wird dieser auf den angegebenen Zahlenwert **fixiert**.

Dies nutzen wir bei den Intercepts f√ºr die Variablen aus dem Datensatz aus, um diese Variablen (die von `lavaan` als gemessen behandelt werden, obwohl wir sie ja nicht gemessen, sondern als Faktor-Scores aus gemessenen Indikatoren berechnet haben) in latente Variablen umzuwandeln. Bspw. f√ºhren die beiden Zeilen `sleep1 =~ fssleep1` und `fssleep1 ~ 0 * 1` dazu, dass `sleep1` die Werte von `fssleep1` annimmt, intern aber trotzdem als latente Variable behandelt wird.

Obwohl wir beeindruckend hohe Parameter f√ºr die Auto- und Kreuzregressionen sehen, sollten wir vorsichtig sein. Die Fitstatistiken sprechen n√§mlich alle gegen dieses Modell. Das kann viele Gr√ºnde haben; vielleicht sollten wir die Kovarianzen zwischen den Variablen ab Zeitpunkt 2 nicht gleichsetzen. Vielleicht sollten wir aber auch manche Varianzen gleichsetzen. Es g√§be viele M√∂glichkeiten, von hier aus weiterzuarbeiten. In dieser Sitzung w√§hlen wir eine, die nebenbei auch noch ein grunds√§tzliches konzeptuelles Problem an CLPMs offenlegt.

## Cross-Legged Panel Models with Random Intercept

Momentan trennen wir noch nicht zwischen Effekten within- und between-subjects. Die Varianz, die dadurch zustande kommt, dass manche Leute einfach grunds√§tzlich (√ºber die Zeit stabil) l√§nger schlafen als andere und manche ein grundlegend geringeres psychisches Wohlbefinden haben als andere, verteilt sich momentan gemeinsam mit den Entwicklungen einzelner Personen √ºber die Zeit hinweg auf die Auto- und Kreuzregressionsparameter. Wir k√∂nnen aber daf√ºr sorgen, dass das nicht mehr geschieht, indem wir pro Variable eine weitere latente Variable in das Modell einbringen.

Dieses Vorgehen √§hnelt dem, was wir am Ende der letzten Sitzung gemacht haben. Dort haben wir mit einer weiteren latenten Variable die gemeinsame Varianz der 4 latenten Variablen des jeweiligen Konstrukts "herausgezogen". Statistisch gesehen ist das so, als ob wir f√ºr jede Person einen Mittelwert pro Konstrukt √ºber die Zeit hinweg bilden und die Werte dieser Person anhand ihres Mittelwertes zentrieren. So bleiben nur die Ver√§nderungen der Personen √ºber die Zeit √ºbrig.

Das Modell entwickelt sich so zu einem Modell mit Random Intercept f√ºr jede Person. Deshalb hei√üt diese neue Modellklasse Cross-Legged Panel Model with Random Intercept (CLPM-RI).

```{r}
clpmri = '
# 1. Latente Variablen
sleep1 =~ 1 * fssleep1
sleep2 =~ 1 * fssleep2
sleep3 =~ 1 * fssleep3
sleep4 =~ 1 * fssleep4
mwb1 =~ 1 * fsmwb1
mwb2 =~ 1 * fsmwb2
mwb3 =~ 1 * fsmwb3
mwb4 =~ 1 * fsmwb4
isleep =~ 1 * sleep1 + 1 * sleep2 + 1 * sleep3 + 1 * sleep4
imwb =~ 1 * mwb1 + 1 * mwb2 + 1 * mwb3 + 1 * mwb4


# 2. Autoregression
sleep2 ~ a1 * sleep1
sleep3 ~ a1 * sleep2
sleep4 ~ a1 * sleep3
mwb2 ~ a2 * mwb1
mwb3 ~ a2 * mwb2
mwb4 ~ a2 * mwb3

# 3. Kreuzregression
mwb2 ~ c1 * sleep1
mwb3 ~ c1 * sleep2
mwb4 ~ c1 * sleep3
sleep2 ~ c2 * mwb1
sleep3 ~ c2 * mwb2
sleep4 ~ c2 * mwb3

# 4. Kovarianzen
sleep1 ~~ cov1 * mwb1
sleep2 ~~ cov2 * mwb2
sleep3 ~~ cov2 * mwb3
sleep4 ~~ cov2 * mwb4

isleep ~~ covi*imwb

sleep1 ~~ 0 * isleep
mwb1 ~~ 0 * isleep
sleep1 ~~ 0 * imwb
mwb1 ~~ 0 * imwb

# 5. Intercepts
fssleep1 ~ 0 * 1
fssleep2 ~ 0 * 1
fssleep3 ~ 0 * 1
fssleep4 ~ 0 * 1
fsmwb1 ~ 0 * 1
fsmwb2 ~ 0 * 1
fsmwb3 ~ 0 * 1
fsmwb4 ~ 0 * 1

isleep ~ 1
imwb ~ 1
'

clpmrifit = sem(clpmri, dat)
summary(clpmrifit, fit.measures=TRUE)
SEMgraph(clpmrifit, showPar=FALSE)
```

Die √Ñnderung schl√§gt sich in den Estimates wieder; die Auto- und Kreuzregressionen sind deutlich kleiner. Auch die Interpretation dieser Parameter hat sich dahingehend ver√§ndert, dass sie sich nur noch auf die Entwicklungen within-subjects beziehen. Die between-subjects Effekte finden sich in der Kovarianz zwischen den beiden Intercept-Faktoren wieder. Es scheint eine starke, positive Assoziation zwischen der durchschnittlichen Schlafmenge √ºber die Zeit hinweg und dem durchschnittlichen mentalen Wohlbefinden √ºber die Zeit hinweg zu geben.

Bei diesem Modell sind die Fitstatistiken auch wieder gut (wobei das vielleicht daran liegen k√∂nnte, dass die Daten simuliert sind und genau auf diesem Modell basieren üòâ).

## Anmerkungen zu SEM und `lavaan`

Mit den in diesen Sitzungen behandelten Themen sind wir gut ausger√ºstet f√ºr Datenanalysen mit SEM. Dennoch gibt es noch einige wichtige Anmerkungen zu machen:

-   Egal, welche Daten und welches Modell man hat, `lavaan` wird signifikante Parameter finden. Eine gr√ºndliche Evaluation jedes Modells und Vorsicht bei der Datenauswahl sind sehr wichtig.

-   `lavaan` kann noch viel mehr, als das, was wir behandelt haben. Falls euch das Thema interessiert, schaut doch mal in dem Paper "lavaan: An R Package for Structural Equation Modelling" von Yves Roseel (2012) nach.

-   Das CLPM-RI ist nicht die einzige L√∂sung f√ºr das within-between Problem. Eine weitere Methode wird von Mund (2021) beschrieben.
